/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.concurrent.ThreadLocalRandom;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;



/**
 *
 * @author 1GDAW02
 */
public class FirstFight extends javax.swing.JFrame {
    /**
     * Creates new form FirstFight
     */
    int EnemyCounterAttack = 0;
    int sec = 5;
    
    public FirstFight() {
        initComponents();
        setVisible(false);
        setLocationRelativeTo(null);
        EnemyLife.setValue(100);
        YourLife.setValue(2 * IconFigthers.IconFigthers.HazardBorn().getDefense() + IconFigthers.IconFigthers.HazardBorn().getLifePoints());
    }
        
    public void Done() {
        CombatContext.setText("test");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HazardousAttack = new javax.swing.JButton();
        UltraHazard = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CombatContext = new javax.swing.JTextArea();
        YourLife = new javax.swing.JProgressBar();
        EnemyLife = new javax.swing.JProgressBar();
        Hazard = new javax.swing.JLabel();
        Enemy = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HazardousAttack.setText("Hazardous Attack");
        HazardousAttack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HazardousAttackMouseClicked(evt);
            }
        });

        UltraHazard.setText("Ultra Hazard");
        UltraHazard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UltraHazardMouseClicked(evt);
            }
        });

        CombatContext.setColumns(20);
        CombatContext.setRows(5);
        jScrollPane1.setViewportView(CombatContext);

        Hazard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/if_Button_Biohazard-01_1221890.png"))); // NOI18N

        Enemy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/if_icon-102-document-file-xml_315587.png"))); // NOI18N
        Enemy.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                EnemyPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 146, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EnemyLife, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(YourLife, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(HazardousAttack)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(UltraHazard))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(150, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel2)
                .addGap(64, 64, 64)
                .addComponent(Hazard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Enemy)
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addGap(101, 101, 101))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(EnemyLife, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Enemy))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 127, Short.MAX_VALUE)
                                .addComponent(Hazard)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(YourLife, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HazardousAttack)
                    .addComponent(UltraHazard))
                .addGap(71, 71, 71))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HazardousAttackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HazardousAttackMouseClicked
        // TODO add your handling code here:
        int damage = ThreadLocalRandom.current().nextInt(IconFigthers.IconFigthers.HazardBorn().getAttack() / 4, IconFigthers.IconFigthers.HazardBorn().getAttack() / 2);
        EnemyLife.setValue(EnemyLife.getValue() - damage);
        
        if(damage > 10){
            CombatContext.setText("Hazard used 'Hazardous Attack'!" + "\n" + "It seems it is effective!");  
        }else 
            CombatContext.setText("Hazard used 'Hazardous Attack'!");
            UltraHazard.setEnabled(true);
        
        if (EnemyLife.getValue() <= 0) {
             CombatContext.setText("Damn, you massacred XML. Good job, now, continue your journey.");
        }
        
        
     
        TimerTask timerTask = new TimerTask()
     {
         public void run() 
         {
             // Aquí el código que queremos ejecutar.
             JOptionPane.showMessageDialog(null, "Hola");
         }
     }; 
        
        Timer timer = new Timer();
     // Dentro de 0 milisegundos avísame cada 1000 milisegundos
     timer.scheduleAtFixedRate(timerTask, 0, 1000); 
     
     
   
        
    }//GEN-LAST:event_HazardousAttackMouseClicked
    
    private void EnemyAttack(){
        YourLife.setValue(EnemyLife.getValue() - EnemyCounterAttack);
        if (EnemyCounterAttack > 10){
            CombatContext.setText(CombatContext.getText() + "\n" + "\n" + "XML used 'Basic Attack'!" + "\n" + "It seems it is effective!");  
        }else if (EnemyCounterAttack >= 20){
            CombatContext.setText(CombatContext.getText() + "\n" + "\n"  + "XML used 'Basic Attack'!" + "\n" + "It it is super effective!");  
        }else
            CombatContext.setText(CombatContext.getText() + "\n" + "\n" + "XML used 'Basic Attack'!");
    }
    
    private void UltraHazardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UltraHazardMouseClicked
        // TODO add your handling code here:
        int damage = ThreadLocalRandom.current().nextInt(IconFigthers.IconFigthers.HazardBorn().getAttack() / 3, IconFigthers.IconFigthers.HazardBorn().getAttack() - 10);
        EnemyLife.setValue((EnemyLife.getValue()) - damage);
        
        if (damage > 10){
            CombatContext.setText("Hazard used 'Ultra Hazard'!" + "\n" + "It seems it is effective!");  
        }else if (damage >= 20){
            CombatContext.setText("Hazard used 'Ultra Hazard'!" + "\n" + "It it is super effective!");  
        }else 
        CombatContext.setText("Hazard used 'Ultra Hazard'!");
        
        if (EnemyLife.getValue() <= 0) {
             CombatContext.setText("Damn, you massacred XML. Good job, now, continue your journey.");
        }
        
        UltraHazard.setEnabled(false);
        EnemyCounterAttack = IconFigthers.IconFigthers.CounterAttack(2);
        EnemyAttack();
    }//GEN-LAST:event_UltraHazardMouseClicked

    private void EnemyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_EnemyPropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_EnemyPropertyChange
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstFight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstFight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstFight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstFight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstFight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CombatContext;
    private javax.swing.JLabel Enemy;
    private javax.swing.JProgressBar EnemyLife;
    private javax.swing.JLabel Hazard;
    private javax.swing.JButton HazardousAttack;
    private javax.swing.JButton UltraHazard;
    private javax.swing.JProgressBar YourLife;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
